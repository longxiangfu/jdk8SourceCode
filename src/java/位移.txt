总结：
1、正数原码、反码、补码都相同；
   负数的反码：原码最高位不变，其他位取反。负数的补码：反码+1
2、<<:低位补0
   >>:正数时，最高位补0。负数时，最高位补1
3、在java中，使用补码来表示整数并参与计算

左移<<
10
0000 0000 1010   
<<2  
0000 0010 1000    40    2^5+2^3=40   10*2^2=40
<<3
0000 0101 0000    80    2^6+2^4=80    10*2^3=80

-10
1111 1111 0110    1000 0000 1001     1000 0000 1010  -(2^3+2^1)=-10
<<2
1111 1101 1000    1000 0010 0111     1000 0010 1000  -(2^5+2^3)=-40   -10*2^2=-40




右移>>
10
0000 0000 1010
>>1(注意>>2时，10/(2^2)不是整数，计算机会处理)
0000 0000 0101    2^2+2^0=5  10/(2^1)=5

-10
1111 1111 0110    1000 0000 1001     1000 0000 1010  -(2^3+2^1)=-10
>>1
1111 1111 1011    1000 0000 0100     1000 0000 0101  -(2^2+2^0)=-5  -10/(2^1)=-5

无符号右移>>>:无论正数还是负数，都是最高位补0


