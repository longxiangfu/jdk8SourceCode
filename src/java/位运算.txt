&(与)、|（或）、~（非）、^（异或）

&(与)：左右两个数对应二进制，从高位到底位，依次比较。都是1才为1，否则为0
比如：129&128
129转换成二进制就是10000001，128转换成二进制就是10000000。从高位开始比较得到，得到10000000，即128

|（或）:只要有一个1就为1，否则为0
比如：129|128
129转换成二进制就是10000001，128转换成二进制就是10000000。从高位开始比较得到，得到10000001，即129

~（非）:各位取反
比如：~37
在Java中，所有数据的表示方法都是以补码的形式表示，如果没有特殊说明，Java中的数据类型默认是int,int数据类型的长度是8位，
一位是四个字节，就是32字节，32bit
8转为二进制是100101
补码后为： 00000000 00000000 00000000 00100101
取反为：    11111111 11111111 11111111 11011010  该对应是结果的原码，反码为1000 0000 0010 0101,补码1000 0000 0010 0110  结果位-38


^（异或）:相同为0，不同为1
比如：8^11
8转为二进制是1000，11转为二进制是1011.从高位开始比较得到的是：0011.然后二进制转为十进制，就是Integer.parseInt("0011",2)=3